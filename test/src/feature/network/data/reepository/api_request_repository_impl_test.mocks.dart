// Mocks generated by Mockito 5.4.4 from annotations
// in uae_top_up/test/src/feature/network/data/reepository/api_request_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;

import 'package:http/http.dart' as _i4;
import 'package:http/testing.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:uae_top_up/src/feature/configuration/data/app_config_model.dart'
    as _i5;
import 'package:uae_top_up/src/feature/local_storage/domain/repository/local_storage_repository.dart'
    as _i2;
import 'package:uae_top_up/src/feature/server_mocks/domain/util/server_client.dart'
    as _i7;
import 'package:uae_top_up/src/feature/transaction/data/model/transaction_model.dart'
    as _i9;
import 'package:uae_top_up/src/feature/transaction/domain/entity/transaction.dart'
    as _i10;
import 'package:uae_top_up/src/feature/user_management/data/model/user_model.dart'
    as _i6;
import 'package:uae_top_up/src/feature/user_management/domain/entity/beneficiary.dart'
    as _i11;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeLocalStorageRepository_0 extends _i1.SmartFake
    implements _i2.LocalStorageRepository {
  _FakeLocalStorageRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMockClient_1 extends _i1.SmartFake implements _i3.MockClient {
  _FakeMockClient_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_2 extends _i1.SmartFake implements _i4.Response {
  _FakeResponse_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAppConfigModel_3 extends _i1.SmartFake
    implements _i5.AppConfigModel {
  _FakeAppConfigModel_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserModel_4 extends _i1.SmartFake implements _i6.UserModel {
  _FakeUserModel_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ServerClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockServerClient extends _i1.Mock implements _i7.ServerClient {
  @override
  _i2.LocalStorageRepository get localStorage => (super.noSuchMethod(
        Invocation.getter(#localStorage),
        returnValue: _FakeLocalStorageRepository_0(
          this,
          Invocation.getter(#localStorage),
        ),
        returnValueForMissingStub: _FakeLocalStorageRepository_0(
          this,
          Invocation.getter(#localStorage),
        ),
      ) as _i2.LocalStorageRepository);

  @override
  _i3.MockClient mockClient() => (super.noSuchMethod(
        Invocation.method(
          #mockClient,
          [],
        ),
        returnValue: _FakeMockClient_1(
          this,
          Invocation.method(
            #mockClient,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeMockClient_1(
          this,
          Invocation.method(
            #mockClient,
            [],
          ),
        ),
      ) as _i3.MockClient);

  @override
  _i8.Future<_i4.Response> handler(dynamic request) => (super.noSuchMethod(
        Invocation.method(
          #handler,
          [request],
        ),
        returnValue: _i8.Future<_i4.Response>.value(_FakeResponse_2(
          this,
          Invocation.method(
            #handler,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i4.Response>.value(_FakeResponse_2(
          this,
          Invocation.method(
            #handler,
            [request],
          ),
        )),
      ) as _i8.Future<_i4.Response>);

  @override
  _i4.Response appConfigResponse() => (super.noSuchMethod(
        Invocation.method(
          #appConfigResponse,
          [],
        ),
        returnValue: _FakeResponse_2(
          this,
          Invocation.method(
            #appConfigResponse,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeResponse_2(
          this,
          Invocation.method(
            #appConfigResponse,
            [],
          ),
        ),
      ) as _i4.Response);

  @override
  _i5.AppConfigModel mockConfigs() => (super.noSuchMethod(
        Invocation.method(
          #mockConfigs,
          [],
        ),
        returnValue: _FakeAppConfigModel_3(
          this,
          Invocation.method(
            #mockConfigs,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeAppConfigModel_3(
          this,
          Invocation.method(
            #mockConfigs,
            [],
          ),
        ),
      ) as _i5.AppConfigModel);

  @override
  _i8.Future<_i4.Response> addBeneficiaryResponse({
    required String? senderPhoneNumber,
    required String? phoneNumber,
    required String? beneficiaryName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addBeneficiaryResponse,
          [],
          {
            #senderPhoneNumber: senderPhoneNumber,
            #phoneNumber: phoneNumber,
            #beneficiaryName: beneficiaryName,
          },
        ),
        returnValue: _i8.Future<_i4.Response>.value(_FakeResponse_2(
          this,
          Invocation.method(
            #addBeneficiaryResponse,
            [],
            {
              #senderPhoneNumber: senderPhoneNumber,
              #phoneNumber: phoneNumber,
              #beneficiaryName: beneficiaryName,
            },
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i4.Response>.value(_FakeResponse_2(
          this,
          Invocation.method(
            #addBeneficiaryResponse,
            [],
            {
              #senderPhoneNumber: senderPhoneNumber,
              #phoneNumber: phoneNumber,
              #beneficiaryName: beneficiaryName,
            },
          ),
        )),
      ) as _i8.Future<_i4.Response>);

  @override
  _i8.Future<_i4.Response> makeTransactionResponse(
          {required _i9.TransactionModel? newTransaction}) =>
      (super.noSuchMethod(
        Invocation.method(
          #makeTransactionResponse,
          [],
          {#newTransaction: newTransaction},
        ),
        returnValue: _i8.Future<_i4.Response>.value(_FakeResponse_2(
          this,
          Invocation.method(
            #makeTransactionResponse,
            [],
            {#newTransaction: newTransaction},
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i4.Response>.value(_FakeResponse_2(
          this,
          Invocation.method(
            #makeTransactionResponse,
            [],
            {#newTransaction: newTransaction},
          ),
        )),
      ) as _i8.Future<_i4.Response>);

  @override
  bool checkTransactionPossible(
    _i10.Transaction? transaction, {
    required List<_i10.Transaction>? userTransactions,
    required List<_i11.Beneficiary>? userBeneficiaries,
    required bool? userVerified,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkTransactionPossible,
          [transaction],
          {
            #userTransactions: userTransactions,
            #userBeneficiaries: userBeneficiaries,
            #userVerified: userVerified,
          },
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i8.Future<List<_i6.UserModel>> getSavedUsersList() => (super.noSuchMethod(
        Invocation.method(
          #getSavedUsersList,
          [],
        ),
        returnValue: _i8.Future<List<_i6.UserModel>>.value(<_i6.UserModel>[]),
        returnValueForMissingStub:
            _i8.Future<List<_i6.UserModel>>.value(<_i6.UserModel>[]),
      ) as _i8.Future<List<_i6.UserModel>>);

  @override
  _i8.Future<_i6.UserModel> createUser(
    String? phoneNumber,
    List<_i6.UserModel>? savedUsers,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createUser,
          [
            phoneNumber,
            savedUsers,
          ],
        ),
        returnValue: _i8.Future<_i6.UserModel>.value(_FakeUserModel_4(
          this,
          Invocation.method(
            #createUser,
            [
              phoneNumber,
              savedUsers,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i6.UserModel>.value(_FakeUserModel_4(
          this,
          Invocation.method(
            #createUser,
            [
              phoneNumber,
              savedUsers,
            ],
          ),
        )),
      ) as _i8.Future<_i6.UserModel>);

  @override
  _i8.Future<void> saveUsers(List<_i6.UserModel>? savedUsers) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveUsers,
          [savedUsers],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
}
