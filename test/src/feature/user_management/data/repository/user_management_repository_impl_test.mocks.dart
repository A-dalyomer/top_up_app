// Mocks generated by Mockito 5.4.4 from annotations
// in uae_top_up/test/src/feature/user_management/data/repository/user_management_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:uae_top_up/src/feature/local_storage/domain/repository/local_storage_repository.dart'
    as _i2;
import 'package:uae_top_up/src/feature/network/domain/repository/api_request_repository.dart'
    as _i4;
import 'package:uae_top_up/src/feature/transaction/data/model/transaction_model.dart'
    as _i6;
import 'package:uae_top_up/src/feature/transaction/domain/entity/transaction.dart'
    as _i7;
import 'package:uae_top_up/src/feature/transaction/domain/repository/transaction_repository.dart'
    as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [LocalStorageRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalStorageRepository extends _i1.Mock
    implements _i2.LocalStorageRepository {
  @override
  _i3.Future<String?> readValue(String? valueKey) => (super.noSuchMethod(
        Invocation.method(
          #readValue,
          [valueKey],
        ),
        returnValue: _i3.Future<String?>.value(),
        returnValueForMissingStub: _i3.Future<String?>.value(),
      ) as _i3.Future<String?>);

  @override
  _i3.Future<void> writeValue(
    String? valueKey,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #writeValue,
          [
            valueKey,
            value,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> removeValue(String? valueKey) => (super.noSuchMethod(
        Invocation.method(
          #removeValue,
          [valueKey],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}

/// A class which mocks [ApiRequestRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiRequestRepository extends _i1.Mock
    implements _i4.ApiRequestRepository {
  @override
  _i3.Future<Map<String, dynamic>?> getRequest(
    String? apiPath, {
    Map<String, String>? headers,
    dynamic Function(int)? requestCodesHandler,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRequest,
          [apiPath],
          {
            #headers: headers,
            #requestCodesHandler: requestCodesHandler,
          },
        ),
        returnValue: _i3.Future<Map<String, dynamic>?>.value(),
        returnValueForMissingStub: _i3.Future<Map<String, dynamic>?>.value(),
      ) as _i3.Future<Map<String, dynamic>?>);

  @override
  _i3.Future<Map<String, dynamic>?> postRequest(
    String? apiPath, {
    Map<String, String>? headers,
    Map<String, dynamic>? body,
    dynamic Function(int)? requestCodesHandler,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postRequest,
          [apiPath],
          {
            #headers: headers,
            #body: body,
            #requestCodesHandler: requestCodesHandler,
          },
        ),
        returnValue: _i3.Future<Map<String, dynamic>?>.value(),
        returnValueForMissingStub: _i3.Future<Map<String, dynamic>?>.value(),
      ) as _i3.Future<Map<String, dynamic>?>);
}

/// A class which mocks [TransactionRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTransactionRepository extends _i1.Mock
    implements _i5.TransactionRepository {
  @override
  _i3.Future<_i6.TransactionModel?> makeTransaction(
          {required _i7.Transaction? transaction}) =>
      (super.noSuchMethod(
        Invocation.method(
          #makeTransaction,
          [],
          {#transaction: transaction},
        ),
        returnValue: _i3.Future<_i6.TransactionModel?>.value(),
        returnValueForMissingStub: _i3.Future<_i6.TransactionModel?>.value(),
      ) as _i3.Future<_i6.TransactionModel?>);
}
